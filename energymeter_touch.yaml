
substitutions:
  section1_end: "2000" # End value for first gauge section
  section2_end: "5000" # End value for second gauge section
  section3_end: "8000" # End value for third gauge section
  devicename: energy_meter_touch
  friendly_name: Energy touchscreen
  device_description: Energie touchscreen round
  time_timezone: "Europe/Amsterdam"

#globals:
esphome:
  name: $devicename
  friendly_name: $friendly_name
  comment: ${device_description}
  name_add_mac_suffix: false

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino #esp-idf

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # manual_ip:
  #   static_ip: *.*.*.*
  #   gateway: *.*.*.*
  #   subnet: *.*.*.*
 

  # Enable fallback in case wifi connection fails
  ap:
    ssid: “${devicename} AP"
    password: !secret fallback_ap_password

# Enable Home Assistant API
api:
 encryption:
  key:  !secret api_key_password
 id: api_apiserver

# Allow Over-The-Air updates
ota:
 platform: esphome 
 password: !secret ota_password

#captive_portal:

logger: 
  level: info

debug: # uses a lot of SRAM
  update_interval: 20s

# ⬇ Enable webinterface ⬇ 
web_server:
  port: 80
  include_internal: true

#-------------------------------



sensor:

  - platform: uptime
    name: "${friendly_name} Uptime"
    internal: true
    entity_category: diagnostic  
    
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 240s
    entity_category: diagnostic
    internal: true


  # - platform: debug
  #   free:
  #     name: "Heap Free"
  #   fragmentation:
  #     name: "Heap Fragmentation"
  #   block:
  #     name: "Heap Max Block"
  #   loop_time:
  #     name: "Loop Time"

  - platform: homeassistant
    id: kwh_live
    entity_id: sensor.power_consumed
    internal: True
    filters:
      - or:
        - delta: 100 # Send updates only when the change is more than 100 watts
        - timeout:
            timeout: 5min
            value: 0
      - multiply: 1000 # Convert from kW to kWh
    
    on_value:
      then:
        - script.execute: update_display
        - if:
            condition:
              lambda: |-
                return id(kwh_live).state < 2000.0;  
            then:
              - lvgl.label.update:
                  id: power_meter_text
                  text_color: 0x00FF00
        - if:
            condition:
              lambda: |-
                return id(kwh_live).state >= 2000.0 && id(kwh_live).state < 5000.0;
            then:
              - lvgl.label.update:
                  id: power_meter_text
                  text_color: 0xFFFF00
        - if:
            condition:
              lambda: |-
                return id(kwh_live).state >= 5000.0;
            then:
              - lvgl.label.update:
                  id: power_meter_text
                  text_color: 0xFF0000
  

  - platform: homeassistant
    id: kwh_today
    entity_id: sensor.house_energy_consumption
    internal: True
    filters:
      - or:
        - delta: 0.5 # Send updates only when the change is more than 0.5 kWh
        - timeout:
            timeout: 90min
            value: 0
  - platform: homeassistant
    id: cost_today
    entity_id: sensor.house_energy_consumption_cost
    internal: True
    filters:
      - or:
        - delta: 1 # Send updates only when the change is more than 1 kr
        - timeout:
            timeout: 150min
            value: 0
  - platform: homeassistant
    id: solar_today
    entity_id: sensor.hoeve33_solar_energy_today
    internal: True
    filters:
      - or:
        - delta: 0.5 # Send updates only when the change is more than 0.5 kWh
        - timeout:
            timeout: 90min
            value: 0
  - platform: homeassistant
    id: solar_fund
    entity_id: sensor.house_energy_return_to_grid
    internal: True
    filters:
      - or:
        - delta: 1 # Send updates only when the change is more than 1 kr
        - timeout:
            timeout: 150min
            value: 0

# backlight pins and settings
spi:
  clk_pin: GPIO6
  mosi_pin: GPIO7

output:
  - platform: ledc
    pin:
      number: GPIO3
    id: backlight_output

light:
  - platform: monochromatic
    output: backlight_output
    name: LCD Backlight
    id: back_light
    restore_mode: RESTORE_DEFAULT_ON
    on_turn_off: 
      then:
        lvgl.pause

# display settings ESP32-2424S012C-I-YB 

display:
  - platform: ili9xxx
    invert_colors: true
    id: lcd_display
    model: gc9a01a
    data_rate: 80MHz #40MHz
    cs_pin: GPIO10
    dc_pin: GPIO2
    dimensions:
      width: 240
      height: 240
    update_interval: never
    auto_clear_enabled: false
    transform: # Configure to use it upside down. Remove transform-element to rotate 180
      mirror_x: false
      mirror_y: true

script:
  - id: update_display
    then:
      - lvgl.indicator.update:
          id: power_meter_input
          value: !lambda return id(kwh_live).get_state();
      - lvgl.label.update:
          id: power_meter_text
          text:
            format: "%.0f W"
            args: [ 'id(kwh_live).get_state()' ]
      - lvgl.image.update:
          id: img_thunderbolt
          src: thunderbolt_icon
          image_recolor: 0xFFF000 #mixes this color with the base image
      - lvgl.label.update:
          id: kwh_today_text
          text:
            format: "%.1f kWh"
            args: [ 'id(kwh_today).get_state()' ]
      - lvgl.label.update:
          id: cost_today_text
          text:
            format: "%.1 E"
            args: [ 'id(cost_today).get_state()' ]
      - lvgl.label.update:
          id: solar_today_text
          text:
            format: "%.1f kWh"
            args: [ 'id(solar_today).get_state()' ]
      - lvgl.label.update:
          id: solar_fund_text
          text:
            format: "%.0f kwh"
            args: [ 'id(solar_fund).get_state()' ]

i2c:
  sda: 4
  scl: 5
  id: i2c_touch

touchscreen:
  platform: cst816
  id: my_touchscreen
  interrupt_pin: 0
  reset_pin: 1
  on_touch:
    then:
      - if: # If the LCD is switched off (controllable from the home-assistant), turn on display on first touch
          condition: lvgl.is_paused
          then:
            - lvgl.resume
            - lvgl.page.show: main_page
            - light.turn_on:
                id: back_light
          else: # If LCD is on, then a touch should show the next page
            - lvgl.page.next


image:
  - file: mdi:lightning-bolt
    id: thunderbolt_icon
    resize: 40x40

lvgl:
  touchscreens: my_touchscreen
  log_level: WARN
  color_depth: 16
  bg_color: 0
  border_width: 0
  outline_width: 0
  shadow_width: 0
  text_font: unscii_16
  align: center
  style_definitions:
    - id: meter_style
      text_font: unscii_8
    - id: font_style
      text_font: MONTSERRAT_24
      align: center
      text_color: 0xFFFFFF
      bg_opa: TRANSP
      bg_color: 0
      radius: 4
      pad_all: 2 
  on_idle:  # Go back to main page after 15 sec
    - timeout: 15 sec
      then: 
        - lvgl.page.show: main_page
  page_wrap: true
  pages:
    - id: main_page
      widgets:
        - obj: # Meter
            height: 240 # needed to be explicitly defined for my round display to not have weird corder line overlapping gauge
            width: 240
            bg_color: 0
            border_width: 0
            outline_width: 0
            shadow_width: 0
            pad_all: 4
            align: center
            widgets:
              - meter: # Gradient color  arc
                  height: 100%
                  width: 100%
                  border_width: 0
                  outline_width: 0
                  align: center
                  bg_color: 0
                  styles: meter_style
                  scales:
                    angle_range: 240 # sets the total angle to 180 = starts mid left and ends mid right
                    range_to: !lambda return ${section3_end} ;
                    range_from: 0
                    ticks:
                      count: 0

                    indicators:
                      - line:
                          id: power_meter_input
                          width: 10
                          color: 0x0000FF
                          r_mod: 12 # Sets line length by this much difference from the scale default radius
                          value: 0
                      - arc:
                          color: 0x00FF00
                          r_mod: 10 # Radius difference from the scale default radius
                          width: 20
                          start_value: 0
                          end_value: !lambda return ${section1_end} ;
                      - arc:
                          color: 0xFFFF00
                          r_mod: 10 # Radius difference from the scale default radius
                          width: 20
                          start_value: !lambda return ${section1_end} ;
                          end_value: !lambda return ${section2_end} ;
                      - arc:
                          color: 0xFF3000
                          r_mod: 10 # Radius difference from the scale default radius
                          width: 20
                          start_value: !lambda return ${section2_end} ;
                          end_value: !lambda return ${section3_end} ;


              - obj: # to erase middle part of meter indicator line
                    height: 180
                    width: 180
                    radius: 90
                    align: center
                    border_width: 0
                    pad_all: 0
                    bg_color: 0x000000
              - label: # gauge lower and higher range indicators
                  styles: font_style
                  text_font: MONTSERRAT_22 # override font size
                  y: 70 #negative = higher
                  x: -70
                  text: "0"
              - label: # gauge lower and higher range indicators
                  styles: font_style
                  text_font: MONTSERRAT_22 # override font size
                  y: -70 #negative = higher
                  x: 0
                  text: "Thuis"
                  # WIP!
                  #text: !lambda |-
                  #  std::string result = std::to_string(float($section3_end*10/2)/10);
                  #  return result.c_str();
                  # WIP!
              - label:
                  styles: font_style
                  text_font: MONTSERRAT_22 # override font size
                  y: 70 #negative = higher
                  x: 70
                  text: $section3_end
              - label:
                  styles: font_style
                  text_font: MONTSERRAT_40 # override font size
                  id: power_meter_text
                  y: 0
                  text: "? W"
              - image:
                  src: thunderbolt_icon
                  id: img_thunderbolt
                  align: center
                  image_recolor: 0xFFFF00
                  image_recolor_opa: 100% #opacity defaults to 0% = must set this for recolor to take effect
                  y: 80
    - id: page1
      height: 240 
      width: 240
      bg_color: 0
      border_width: 0
      outline_width: 0
      shadow_width: 0
      pad_all: 4
      align: center
      widgets:
        - label:
            styles: font_style
            text_font: MONTSERRAT_30 # override font size
            y: -40 #negative = higher
            x: 0
            text: "Usage dag:"
        - label:
            styles: font_style
            text_font: MONTSERRAT_26 # override font size
            id: kwh_today_text
            y: 0 #negative = higher
            x: 0
            text: "? kWh"
        - label:
            styles: font_style
            text_font: MONTSERRAT_26 # override font size
            id: cost_today_text
            y: 40 #negative = higher
            x: 0
            text: "? E"
    - id: page2
      height: 240 
      width: 240
      bg_color: 0
      border_width: 0
      outline_width: 0
      shadow_width: 0
      pad_all: 4
      align: center
      widgets:
        - label:
            styles: font_style
            text_font: MONTSERRAT_30 # override font size
            y: -40 #negative = higher
            x: 0
            text: "Zon dag:"
        - label:
            styles: font_style
            text_font: MONTSERRAT_26 # override font size
            id: solar_today_text
            y: 0 #negative = higher
            x: 0
            text: "? kWh"
        - label:
            styles: font_style
            text_font: MONTSERRAT_26 # override font size
            id: solar_fund_text
            y: 40 #negative = higher
            x: 0
            text: "? kwh"

#-------- text sensors for diagnostic purposes -----------------------------------------------------------------------------------------------------------
text_sensor:
  - platform: version
    name: "${friendly_name} ESPHome version"
    internal: true
    entity_category: diagnostic


  - platform: wifi_info
    ip_address:
      name: IP-adres
      id: ip_adres
      icon: mdi:ip-network
      internal: true
      entity_category: diagnostic
          
    ssid:
      name: Netwerk
      id: netwerk
      icon: mdi:access-point-network
      internal: true
      entity_category: diagnostic

    mac_address:
      name: Mac-adres
      id: mac_adres
      icon: mdi:folder-key-network-outline 
      internal: true
      entity_category: diagnostic

  - platform: debug
    device:
      name: "Device Info"
    reset_reason:
      name: "Reset Reason"  
   